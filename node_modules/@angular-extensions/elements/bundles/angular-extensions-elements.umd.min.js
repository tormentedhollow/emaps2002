!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("@angular-extensions/elements",["exports","@angular/core","@angular/common"],t):t(((e=e||self)["angular-extensions"]=e["angular-extensions"]||{},e["angular-extensions"].elements={}),e.ng.core,e.ng.common)}(this,function(e,t,r){"use strict";var n=function(){function e(){this.registry=new Map}return e.prototype.loadElement=function(e,t,r){if(void 0===r&&(r=!1),!e)throw new Error("@angular-extensions/elements - url for <"+t+"> not found");if(!t)throw new Error("@angular-extensions/elements - tag for '"+e+"' not found, the *axLazyElement has to be used on HTML element");if(!this.hasElement(e)){var n=this.addElement(e),o=document.createElement("script");r&&(o.type="module"),o.src=e,o.onload=n.resolve,o.onerror=n.reject,document.body.appendChild(o)}return this.registry.get(this.stripUrlProtocol(e))},e.prototype.addElement=function(e){var t;return this.registry.set(this.stripUrlProtocol(e),new Promise(function(e,r){return t={resolve:e,reject:r}})),t},e.prototype.hasElement=function(e){return this.registry.has(this.stripUrlProtocol(e))},e.prototype.stripUrlProtocol=function(e){return e.replace(/https?:\/\//,"")},e.decorators=[{type:t.Injectable,args:[{providedIn:"root"}]}],e.ctorParameters=function(){return[]},e.ngInjectableDef=t.ɵɵdefineInjectable({factory:function(){return new e},token:e,providedIn:"root"}),e}(),o=function(){function e(e,t,r){this.vcr=e,this.template=t,this.elementsLoaderService=r}return e.prototype.ngOnInit=function(){var e=this,t=this.template._def.element.template.nodes[0].element.name;this.loadingTemplateRef&&this.vcr.createEmbeddedView(this.loadingTemplateRef),this.elementsLoaderService.loadElement(this.url,t,this.isModule).then(function(){e.vcr.clear(),e.vcr.createEmbeddedView(e.template)})["catch"](function(){e.vcr.clear(),e.errorTemplateRef?e.vcr.createEmbeddedView(e.errorTemplateRef):console.error("@angular-extensions/elements - Loading of element <"+t+'> failed, please provide <ng-template #error>Loading failed...</ng-template> and reference it in *axLazyElement="errorTemplate: error" to display customized error message in place of element')})},e.decorators=[{type:t.Directive,args:[{selector:"[axLazyElement]"}]}],e.ctorParameters=function(){return[{type:t.ViewContainerRef},{type:t.TemplateRef},{type:n}]},e.propDecorators={url:[{type:t.Input,args:["axLazyElement"]}],loadingTemplateRef:[{type:t.Input,args:["axLazyElementLoadingTemplate"]}],errorTemplateRef:[{type:t.Input,args:["axLazyElementErrorTemplate"]}],isModule:[{type:t.Input,args:["axLazyElementModule"]}]},e}(),a=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:[o],imports:[r.CommonModule],exports:[o]}]}],e}();e.LazyElementsModule=a,e.ɵa=o,e.ɵb=n,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=angular-extensions-elements.umd.min.js.map
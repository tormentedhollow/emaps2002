{"version":3,"file":"angular-extensions-elements.umd.js","sources":["ng://@angular-extensions/elements/lib/lazy-elements/lazy-elements-loader.service.ts","ng://@angular-extensions/elements/lib/lazy-elements/lazy-element/lazy-element.directive.ts","ng://@angular-extensions/elements/lib/lazy-elements/lazy-elements.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nconst LOG_PREFIX = '@angular-extensions/elements';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LazyElementsLoaderService {\n  registry: Map<string, Promise<void>> = new Map<string, Promise<void>>();\n\n  constructor() {}\n\n  loadElement(\n    url: string,\n    tag: string,\n    isModule: boolean = false\n  ): Promise<void> {\n    if (!url) {\n      throw new Error(`${LOG_PREFIX} - url for <${tag}> not found`);\n    }\n\n    if (!tag) {\n      throw new Error(\n        `${LOG_PREFIX} - tag for '${url}' not found, the *axLazyElement has to be used on HTML element`\n      );\n    }\n\n    if (!this.hasElement(url)) {\n      const notifier = this.addElement(url);\n      const script = document.createElement('script') as HTMLScriptElement;\n      if (isModule) {\n        script.type = 'module';\n      }\n      script.src = url;\n      script.onload = notifier.resolve;\n      script.onerror = notifier.reject;\n      document.body.appendChild(script);\n    }\n\n    return this.registry.get(this.stripUrlProtocol(url));\n  }\n\n  private addElement(url: string): Notifier {\n    let notifier: Notifier;\n    this.registry.set(\n      this.stripUrlProtocol(url),\n      new Promise<void>((resolve, reject) => (notifier = { resolve, reject }))\n    );\n    return notifier;\n  }\n\n  private hasElement(url: string): boolean {\n    return this.registry.has(this.stripUrlProtocol(url));\n  }\n\n  private stripUrlProtocol(url: string): string {\n    return url.replace(/https?:\\/\\//, '');\n  }\n}\n\ninterface Notifier {\n  resolve: () => void;\n  reject: (error: any) => void;\n}\n","import {\n  Directive,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\n\nimport { LazyElementsLoaderService } from '../lazy-elements-loader.service';\n\nconst LOG_PREFIX = '@angular-extensions/elements';\n\n@Directive({\n  selector: '[axLazyElement]'\n})\nexport class LazyElementDirective implements OnInit {\n  @Input('axLazyElement') url: string;\n  @Input('axLazyElementLoadingTemplate') loadingTemplateRef: TemplateRef<any>; // tslint:disable-line:no-input-rename\n  @Input('axLazyElementErrorTemplate') errorTemplateRef: TemplateRef<any>; // tslint:disable-line:no-input-rename\n  @Input('axLazyElementModule') isModule: boolean; // tslint:disable-line:no-input-rename\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private template: TemplateRef<any>,\n    private elementsLoaderService: LazyElementsLoaderService\n  ) {}\n\n  ngOnInit() {\n    const elementTag = (this.template as any)._def.element.template.nodes[0]\n      .element.name;\n\n    if (this.loadingTemplateRef) {\n      this.vcr.createEmbeddedView(this.loadingTemplateRef);\n    }\n\n    this.elementsLoaderService\n      .loadElement(this.url, elementTag, this.isModule)\n      .then(() => {\n        this.vcr.clear();\n        this.vcr.createEmbeddedView(this.template);\n      })\n      .catch(() => {\n        this.vcr.clear();\n        if (this.errorTemplateRef) {\n          this.vcr.createEmbeddedView(this.errorTemplateRef);\n        } else {\n          console.error(\n            `${LOG_PREFIX} - Loading of element <${elementTag}> failed, please provide <ng-template #error>Loading failed...</ng-template> and reference it in *axLazyElement=\"errorTemplate: error\" to display customized error message in place of element`\n          );\n        }\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LazyElementDirective } from './lazy-element/lazy-element.directive';\n\n@NgModule({\n  declarations: [LazyElementDirective],\n  imports: [CommonModule],\n  exports: [LazyElementDirective]\n})\nexport class LazyElementsModule {}\n"],"names":["Injectable","LOG_PREFIX","Directive","ViewContainerRef","TemplateRef","Input","NgModule","CommonModule"],"mappings":"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"}